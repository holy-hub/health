# Generated by Django 5.0.6 on 2024-07-08 18:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentification', '0001_initial'),
        ('patient', '0001_initial'),
        ('pharmacie', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chambre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.IntegerField()),
                ('price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Traitement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_traitement', models.DateTimeField()),
                ('price', models.FloatField()),
                ('chambre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medecin.chambre', verbose_name='')),
            ],
            options={
                'verbose_name': 'Traitement',
                'verbose_name_plural': 'Traitements',
            },
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('prix_total', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(verbose_name='description de la Spécialité')),
            ],
        ),
        migrations.CreateModel(
            name='Advice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Titre du conseil')),
                ('content', models.TextField(verbose_name='Contenu du conseil')),
                ('image', models.FileField(max_length=255, upload_to='image/conseils/')),
                ('is_publish', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ill', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pharmacie.maladie', verbose_name='Maladie choisie pour le conseil')),
                ('medecin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentification.medecin', verbose_name='Medecin originaire de cette enregistrement')),
            ],
        ),
        migrations.CreateModel(
            name='Chirurgie',
            fields=[
                ('traitement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='medecin.traitement')),
                ('chirurgien', models.CharField(max_length=50)),
                ('anesthesiste', models.CharField(max_length=50)),
            ],
            bases=('medecin.traitement',),
        ),
        migrations.CreateModel(
            name='ExamenBiologique',
            fields=[
                ('traitement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='medecin.traitement')),
                ('designation', models.CharField(max_length=250)),
                ('resultat_examen', models.TextField()),
                ('image', models.ImageField(upload_to='health/radiology/')),
            ],
            bases=('medecin.traitement',),
        ),
        migrations.CreateModel(
            name='Consigne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posologie', models.CharField(choices=[('comprimé 0.5', 'Moitié de comprimé par jour'), ('comprimé 1', '1 comprimé par jour'), ('comprimé 2', '2 comprimés par jour'), ('comprimé 3', '3 comprimés par jour'), ('sirop 1', '1 cuillerée par jour'), ('sirop 2', '2 cuillerées par jour'), ('sirop 3', '3 cuillerées par jour'), ('poudre 1', '1 sachet par jour'), ('poudre 2', '2 sachets par jour'), ('poudre 3', '3 sachets par jour')], max_length=50, null=True)),
                ('medication', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pharmacie.medication', verbose_name='Les medicaments prescrits')),
            ],
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_consultation', models.DateTimeField()),
                ('motif', models.TextField()),
                ('diagnostic', models.TextField()),
                ('typeConsult', models.CharField(max_length=50)),
                ('price', models.FloatField()),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('medecin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations_medecin', to='authentification.medecin')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations_patient', to='authentification.patient')),
                ('rdv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.appointement', verbose_name='')),
            ],
        ),
        migrations.CreateModel(
            name='Hopital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('adresse', models.CharField(max_length=50, unique=True)),
                ('localisation', models.URLField(max_length=255)),
                ('medecins', models.ManyToManyField(related_name='hopitaux', to='authentification.medecin', verbose_name="Medecin de l'hôpital")),
            ],
        ),
        migrations.CreateModel(
            name='Hospitalisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_admission', models.DateTimeField()),
                ('motif_admission', models.TextField()),
                ('accompagnant', models.CharField(max_length=50)),
                ('tel_accompagnant', models.CharField(max_length=50)),
                ('date_entree', models.DateTimeField(auto_now_add=True)),
                ('date_sortie', models.DateTimeField()),
                ('resultats', models.CharField(max_length=255)),
                ('date_resultats', models.DateTimeField()),
                ('nom_deces', models.CharField(max_length=50)),
                ('date_deces', models.DateTimeField()),
                ('facture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medecin.facture')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentification.patient')),
                ('traitements', models.ManyToManyField(to='medecin.traitement', verbose_name='')),
            ],
        ),
        migrations.CreateModel(
            name='CarnetSante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poids', models.FloatField()),
                ('taille', models.FloatField()),
                ('temperature', models.FloatField()),
                ('tension_arterielle', models.CharField(max_length=20)),
                ('frequence_cardiaque', models.IntegerField()),
                ('notes', models.TextField()),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('hospitalisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facture_patient', to='medecin.hospitalisation')),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('temperature', models.PositiveSmallIntegerField(default=37)),
                ('observation', models.TextField(verbose_name='Observations du medecin')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('consigne', models.ManyToManyField(to='medecin.consigne', verbose_name='Les medications et leur posologie a suivre')),
                ('medecin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions_medecin', to='authentification.medecin', verbose_name='Medecin de consultation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions_patient', to='authentification.patient', verbose_name='Patient de consultation')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('medecin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentification.medecin', verbose_name='')),
            ],
        ),
        migrations.AddField(
            model_name='chambre',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medecin.service', verbose_name=''),
        ),
    ]
